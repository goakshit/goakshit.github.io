<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on</title><link>/post/</link><description>Recent content in Posts on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 27 Sep 2021 10:33:57 +0530</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Debugging in golang</title><link>/post/debugging-in-golang/</link><pubDate>Mon, 27 Sep 2021 10:33:57 +0530</pubDate><guid>/post/debugging-in-golang/</guid><description>Technology photo created by pressfoto - www.freepik.com Debugging in golang We all know that debugging is a very important part of development process and sometimes it can become a nightmare. But how can we do it in golang?
delve or dlv is a tool that can help us to debug our code. It lets us set breakpoints, get value of variables, step into functions, step over functions, step out of functions, run to a specific line, update the variable values etc.</description></item><item><title>Exploring go pkg - time</title><link>/post/exploring-go-pkg-time/</link><pubDate>Sun, 12 Sep 2021 18:29:08 +0530</pubDate><guid>/post/exploring-go-pkg-time/</guid><description>Exploring go pkg - time Go&amp;rsquo;s time package provides a number of functions and types for working with dates and times. Go time formatting is different from other languages. The primary layouts used by the time package are described below.
const ( UnixDate = &amp;#34;Mon Jan _2 15:04:05 MST 2006&amp;#34; RFC1123 = &amp;#34;Mon, 02 Jan 2006 15:04:05 MST&amp;#34; RFC1123Z = &amp;#34;Mon, 02 Jan 2006 15:04:05 -0700&amp;#34; // RFC1123 with numeric zone RFC3339 = &amp;#34;2006-01-02T15:04:05Z07:00&amp;#34; RFC3339Nano = &amp;#34;2006-01-02T15:04:05.</description></item><item><title>Kubernetes: Core Concepts Primer - Part 5</title><link>/post/k8s-primer-p5/</link><pubDate>Sat, 14 Aug 2021 09:30:22 +0530</pubDate><guid>/post/k8s-primer-p5/</guid><description>Kubernetes: Core Concepts Primer - Part 5 What are taints and tolerances? Taints are a mechanism to add restrictions to the scheduling of pods. Tolerance is a mechanism to allow pods to be scheduled on nodes with certain conditions.
To taint a node, use kubectl taint nodes &amp;lt;NODE_NAME&amp;gt; &amp;lt;KEY&amp;gt;=&amp;lt;VALUE&amp;gt;:&amp;lt;TAINT_EFFECT&amp;gt;
There are three kinds of taint effects:
NoSchedule: This taint indicates that the node should not be used by pods.</description></item><item><title>Kubernetes: Core Concepts Primer - Part 4</title><link>/post/k8s-primer-p4/</link><pubDate>Sat, 07 Aug 2021 09:42:31 +0530</pubDate><guid>/post/k8s-primer-p4/</guid><description>Kubernetes: Core Concepts Primer - Part 4 Security Context in Kubernetes Whenever it comes to security, always follow the The principle of least privilege (PlP) principle which states that a subject should be given only those privileges needed for it to complete its task.
Applying the same principle to kubernetes objects, we should grant a user the privileges needed to perform a task. Thats all, nothing more or nothing less. Giving root permissions to containers is not recommended.</description></item><item><title>Kubernetes: Core Concepts Primer - Part 3</title><link>/post/k8s-primer-p3/</link><pubDate>Thu, 05 Aug 2021 18:47:58 +0530</pubDate><guid>/post/k8s-primer-p3/</guid><description>Kubernetes: Core Concepts Primer - Part 3 What are ConfigMaps? A ConfigMap allows you to decouple environment-specific configuration from your container images, so that your applications are easily portable.
Note: ConfigMap does not provide secrecy or encryption. If the data you want to store are confidential, use a Secret rather than a ConfigMap
Imperative way to create configmaps: kubectl create configmap &amp;lt;CONFIG_NAME&amp;gt; --from-literal=&amp;lt;KEY&amp;gt;=&amp;lt;VALUE&amp;gt; kubectl create configmap &amp;lt;CONFIG_NAME&amp;gt; --from-file=&amp;lt;PATH_TO_FILE&amp;gt; Declarative way to create configmaps: # kubectl create -f &amp;lt;FILE&amp;gt; apiVersion: v1 kind: ConfigMap metadata: name: &amp;lt;CONFIG_NAME&amp;gt; data: &amp;lt;KEY&amp;gt;: &amp;lt;VALUE&amp;gt; To use config map in a pod, you need to mount it to the container.</description></item><item><title>Kubernetes: Core Concepts Primer - Part 2</title><link>/post/k8s-primer-p2/</link><pubDate>Thu, 05 Aug 2021 18:14:56 +0530</pubDate><guid>/post/k8s-primer-p2/</guid><description>Kubernetes: Core Concepts Primer - Part 2 What are ReplicaSets? A ReplicaSet&amp;rsquo;s purpose is to maintain a stable set of replica Pods running at any given time.
In short, a ReplicaSet is a monitoring and management tool for Pods that ensures a desired number of Pods are running at any given time based on the selector criteria specified in the ReplicaSet.
Example:
# Create a ReplicaSet apiVersion: apps/v1 # Api Version that made replicaset available kind: ReplicaSet # Kind of resource metadata: name: redis-rs labels: type: redis-backend spec: replicas: 3 # Desired number of replicas selector: matchLabels: type: redis-backend # Label selector used for filtering pods template: metadata: name: redis-pod labels: type: redis-backend # Label used by replicaset for identifying pods spec: containers: - name: redis image: redis Commands associated with ReplicaSet:</description></item><item><title>Setup CI-CD For Hugo Website Using Github Actions</title><link>/post/hugo-ci-cd-using-github-actions/</link><pubDate>Mon, 02 Aug 2021 14:55:52 +0530</pubDate><guid>/post/hugo-ci-cd-using-github-actions/</guid><description>Setup CI/CD For Hugo Website Using Github Actions What is CI/CD? Continuous integration (CI) and continuous delivery (CD) embody a culture, set of operating principles, and collection of practices that enable application development teams to deliver code changes more frequently and reliably.
In short, CI/CD is a way to automate the process of building, testing and deploying code. The cycle of building till deploying is also referred to as pipelining.</description></item><item><title>Kubernetes: Core Concepts Primer - Part 1</title><link>/post/k8s-primer-p1/</link><pubDate>Thu, 29 Jul 2021 10:16:56 +0530</pubDate><guid>/post/k8s-primer-p1/</guid><description>Kubernetes: Core Concepts Primer - Part 1 What is Kubernetes? Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications.
Components of Kubernetes:
API Server: Acts as a interface for users, cli, and other services to interact with the k8s system ETCD: Key-Value store that stores the state, metadata etc. Scheduler: A component that distributes work to nodes in the cluster.</description></item><item><title>Get Started With Minikube on MacOS</title><link>/post/minikube-on-macos/</link><pubDate>Wed, 28 Jul 2021 18:05:10 +0530</pubDate><guid>/post/minikube-on-macos/</guid><description>Get Started With Minikube on MacOS What is Minikube? Minikube is a tool that makes it easy to run Kubernetes locally. It is a one node cluster, where the master and worker processes are on the same machine.
Setup Minikube On MacOS To get started wiht minikube on macOS, we need to install binary for minikube which can be downloaded using the following command:
&amp;lt;!-- For x64-86 --&amp;gt; curl -LO https://storage.</description></item><item><title>Deploy hugo blog on github pages</title><link>/post/hugo-github-pages/</link><pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate><guid>/post/hugo-github-pages/</guid><description>Deploy hugo blog on github pages What is Hugo? Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again.
In short, Hugo is a static website generation tool which transforms markdown into beautiful web pages. One can get started with hundreds of available themes or even create a new one.
Let&amp;rsquo;s jump right in.
First of all, we would need to install Hugo.</description></item><item><title>Welcome to my blog</title><link>/post/welcome/</link><pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate><guid>/post/welcome/</guid><description>Diving into blogging. Whatever exciting I come across, I will try to put it down here. Hopefully everyone will enjoy it.</description></item></channel></rss>