<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>time on</title><link>/tags/time/</link><description>Recent content in time on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 12 Sep 2021 18:29:08 +0530</lastBuildDate><atom:link href="/tags/time/index.xml" rel="self" type="application/rss+xml"/><item><title>Exploring go pkg - time</title><link>/post/exploring-go-pkg-time/</link><pubDate>Sun, 12 Sep 2021 18:29:08 +0530</pubDate><guid>/post/exploring-go-pkg-time/</guid><description>Exploring go pkg - time Go&amp;rsquo;s time package provides a number of functions and types for working with dates and times. Go time formatting is different from other languages. The primary layouts used by the time package are described below.
const ( UnixDate = &amp;#34;Mon Jan _2 15:04:05 MST 2006&amp;#34; RFC1123 = &amp;#34;Mon, 02 Jan 2006 15:04:05 MST&amp;#34; RFC1123Z = &amp;#34;Mon, 02 Jan 2006 15:04:05 -0700&amp;#34; // RFC1123 with numeric zone RFC3339 = &amp;#34;2006-01-02T15:04:05Z07:00&amp;#34; RFC3339Nano = &amp;#34;2006-01-02T15:04:05.</description></item></channel></rss>