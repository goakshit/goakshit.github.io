<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Akshit Dhar</title><link>/</link><description>Recent content on Akshit Dhar</description><generator>Hugo -- gohugo.io</generator><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Sun, 23 Jan 2022 17:20:57 +0100</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Th#7</title><link>/thoughts/th-7/</link><pubDate>Sun, 23 Jan 2022 17:20:57 +0100</pubDate><guid>/thoughts/th-7/</guid><description>Berlin is beautiful. That&amp;rsquo;s all folks.</description></item><item><title>Th#6</title><link>/thoughts/th-6/</link><pubDate>Fri, 07 Jan 2022 09:56:10 +0530</pubDate><guid>/thoughts/th-6/</guid><description>Deployed my first contract on solana devnet chain. Excited. Find it on solana explorer link.
That&amp;rsquo;s all folks.</description></item><item><title>Learning Rust Series: GREP Lite</title><link>/posts/2021/12/learning-rust-series-grep-lite/</link><pubDate>Sun, 05 Dec 2021 17:50:05 +0530</pubDate><guid>/posts/2021/12/learning-rust-series-grep-lite/</guid><description>In this post, I will be creating a simple grep-lite cli application that reads lines from a file or stdin and prints the lines that contain the search string. Since it&amp;rsquo;s a cli application, I need to pass arguments to this app.
Let&amp;rsquo;s get started.
I would be using couple of external dependencies to make this work. clap and regex.
Initialize the code. To initialize the code in rust, run cargo init.</description></item><item><title>Th#5</title><link>/thoughts/th-5/</link><pubDate>Sun, 14 Nov 2021 18:03:10 +0530</pubDate><guid>/thoughts/th-5/</guid><description>Watched a couple of episodes of Attack on Titan (Anime). Engaged! That&amp;rsquo;s all folks.</description></item><item><title>Learning Rust Series: Code organization</title><link>/posts/2021/11/learning-rust-series-code-organization/</link><pubDate>Mon, 01 Nov 2021 10:18:22 +0530</pubDate><guid>/posts/2021/11/learning-rust-series-code-organization/</guid><description>Prerequisites: I am hoping you have Cargo and Rust installed. If not, head to the Guide.
In this series, I will be explaining things that I come across on my Rust learning journey. This is the first installment of the Learning Rust Series which will cover code organization in rust, which is different from other languages.
Code organization is an interesting topic. Whenever I start learning a new language, this is the first thing that I look at.</description></item><item><title>Th#4</title><link>/thoughts/th-4/</link><pubDate>Sun, 31 Oct 2021 09:30:53 +0530</pubDate><guid>/thoughts/th-4/</guid><description>Finished rust crash course today. Rust is ON. That&amp;rsquo;s all folks.</description></item><item><title>Debugging in golang</title><link>/posts/2021/09/debugging-in-golang/</link><pubDate>Mon, 27 Sep 2021 10:33:57 +0530</pubDate><guid>/posts/2021/09/debugging-in-golang/</guid><description>Technology photo created by pressfoto - www.freepik.com We all know that debugging is a very important part of development process and sometimes it can become a nightmare. But how can we do it in golang?
delve or dlv is a tool that can help us to debug our code. It lets us set breakpoints, get value of variables, step into functions, step over functions, step out of functions, run to a specific line, update the variable values etc.</description></item><item><title>Th#3</title><link>/thoughts/th-3/</link><pubDate>Sun, 19 Sep 2021 21:44:32 +0530</pubDate><guid>/thoughts/th-3/</guid><description>Started exploring Rust(https://rust-lang.org/) today!!!! Excited. That&amp;rsquo;s all folks.</description></item><item><title>Th#2</title><link>/thoughts/th-2/</link><pubDate>Wed, 15 Sep 2021 11:55:19 +0530</pubDate><guid>/thoughts/th-2/</guid><description>I am exhausted That&amp;rsquo;s all folks.</description></item><item><title>Th#1</title><link>/thoughts/th-1/</link><pubDate>Mon, 13 Sep 2021 22:59:19 +0530</pubDate><guid>/thoughts/th-1/</guid><description>I should learn Rust (https://www.rust-lang.org/) That&amp;rsquo;s all folks.</description></item><item><title>Exploring go pkg - time</title><link>/posts/2021/09/exploring-go-pkg-time/</link><pubDate>Sun, 12 Sep 2021 18:29:08 +0530</pubDate><guid>/posts/2021/09/exploring-go-pkg-time/</guid><description>Go&amp;rsquo;s time package provides a number of functions and types for working with dates and times. Go time formatting is different from other languages. The primary layouts used by the time package are described below.
const ( UnixDate = &amp;#34;Mon Jan _2 15:04:05 MST 2006&amp;#34; RFC1123 = &amp;#34;Mon, 02 Jan 2006 15:04:05 MST&amp;#34; RFC1123Z = &amp;#34;Mon, 02 Jan 2006 15:04:05 -0700&amp;#34; // RFC1123 with numeric zone RFC3339 = &amp;#34;2006-01-02T15:04:05Z07:00&amp;#34; RFC3339Nano = &amp;#34;2006-01-02T15:04:05.</description></item><item><title>Kubernetes: Core Concepts Primer - Part 5</title><link>/posts/2021/08/kubernetes-core-concepts-primer-part-5/</link><pubDate>Sat, 14 Aug 2021 09:30:22 +0530</pubDate><guid>/posts/2021/08/kubernetes-core-concepts-primer-part-5/</guid><description>What are taints and tolerances? Taints are a mechanism to add restrictions to the scheduling of pods. Tolerance is a mechanism to allow pods to be scheduled on nodes with certain conditions.
To taint a node, use kubectl taint nodes &amp;lt;NODE_NAME&amp;gt; &amp;lt;KEY&amp;gt;=&amp;lt;VALUE&amp;gt;:&amp;lt;TAINT_EFFECT&amp;gt;
There are three kinds of taint effects:
NoSchedule: This taint indicates that the node should not be used by pods. PreferNoSchedule: This taint indicates that the node should not be used by pods, but it is not guaranteed.</description></item><item><title>Kubernetes: Core Concepts Primer - Part 4</title><link>/posts/2021/08/kubernetes-core-concepts-primer-part-4/</link><pubDate>Sat, 07 Aug 2021 09:42:31 +0530</pubDate><guid>/posts/2021/08/kubernetes-core-concepts-primer-part-4/</guid><description>Security Context in Kubernetes Whenever it comes to security, always follow the The principle of least privilege (PlP) principle which states that a subject should be given only those privileges needed for it to complete its task.
Applying the same principle to kubernetes objects, we should grant a user the privileges needed to perform a task. Thats all, nothing more or nothing less. Giving root permissions to containers is not recommended.</description></item><item><title>Kubernetes: Core Concepts Primer - Part 3</title><link>/posts/2021/08/kubernetes-core-concepts-primer-part-3/</link><pubDate>Thu, 05 Aug 2021 18:47:58 +0530</pubDate><guid>/posts/2021/08/kubernetes-core-concepts-primer-part-3/</guid><description>What are ConfigMaps? A ConfigMap allows you to decouple environment-specific configuration from your container images, so that your applications are easily portable.
Note: ConfigMap does not provide secrecy or encryption. If the data you want to store are confidential, use a Secret rather than a ConfigMap
Imperative way to create configmaps: kubectl create configmap &amp;lt;CONFIG_NAME&amp;gt; --from-literal=&amp;lt;KEY&amp;gt;=&amp;lt;VALUE&amp;gt; kubectl create configmap &amp;lt;CONFIG_NAME&amp;gt; --from-file=&amp;lt;PATH_TO_FILE&amp;gt; Declarative way to create configmaps: # kubectl create -f &amp;lt;FILE&amp;gt; apiVersion: v1 kind: ConfigMap metadata: name: &amp;lt;CONFIG_NAME&amp;gt; data: &amp;lt;KEY&amp;gt;: &amp;lt;VALUE&amp;gt; To use config map in a pod, you need to mount it to the container.</description></item><item><title>Kubernetes: Core Concepts Primer - Part 2</title><link>/posts/2021/08/kubernetes-core-concepts-primer-part-2/</link><pubDate>Thu, 05 Aug 2021 18:14:56 +0530</pubDate><guid>/posts/2021/08/kubernetes-core-concepts-primer-part-2/</guid><description>What are ReplicaSets? A ReplicaSet&amp;rsquo;s purpose is to maintain a stable set of replica Pods running at any given time.
In short, a ReplicaSet is a monitoring and management tool for Pods that ensures a desired number of Pods are running at any given time based on the selector criteria specified in the ReplicaSet.
Example:
# Create a ReplicaSet apiVersion: apps/v1 # Api Version that made replicaset available kind: ReplicaSet # Kind of resource metadata: name: redis-rs labels: type: redis-backend spec: replicas: 3 # Desired number of replicas selector: matchLabels: type: redis-backend # Label selector used for filtering pods template: metadata: name: redis-pod labels: type: redis-backend # Label used by replicaset for identifying pods spec: containers: - name: redis image: redis Commands associated with ReplicaSet:</description></item><item><title>Setup CI-CD For Hugo Website Using Github Actions</title><link>/posts/2021/08/setup-ci-cd-for-hugo-website-using-github-actions/</link><pubDate>Mon, 02 Aug 2021 14:55:52 +0530</pubDate><guid>/posts/2021/08/setup-ci-cd-for-hugo-website-using-github-actions/</guid><description>What is CI/CD? Continuous integration (CI) and continuous delivery (CD) embody a culture, set of operating principles, and collection of practices that enable application development teams to deliver code changes more frequently and reliably.
In short, CI/CD is a way to automate the process of building, testing and deploying code. The cycle of building till deploying is also referred to as pipelining.
Let&amp;rsquo;s jump right in. Prerequisite: A GitHub account with hugo website and understanding about github pages</description></item><item><title>Kubernetes: Core Concepts Primer - Part 1</title><link>/posts/2021/07/kubernetes-core-concepts-primer-part-1/</link><pubDate>Thu, 29 Jul 2021 10:16:56 +0530</pubDate><guid>/posts/2021/07/kubernetes-core-concepts-primer-part-1/</guid><description>What is Kubernetes? Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications.
Components of Kubernetes:
API Server: Acts as a interface for users, cli, and other services to interact with the k8s system ETCD: Key-Value store that stores the state, metadata etc. Scheduler: A component that distributes work to nodes in the cluster. Controller: Responsible for orchestration of the cluster.</description></item><item><title>Get Started With Minikube on MacOS</title><link>/posts/2021/07/get-started-with-minikube-on-macos/</link><pubDate>Wed, 28 Jul 2021 18:05:10 +0530</pubDate><guid>/posts/2021/07/get-started-with-minikube-on-macos/</guid><description>What is Minikube? Minikube is a tool that makes it easy to run Kubernetes locally. It is a one node cluster, where the master and worker processes are on the same machine.
Setup Minikube On MacOS To get started wiht minikube on macOS, we need to install binary for minikube which can be downloaded using the following command:
&amp;lt;!-- For x64-86 --&amp;gt; curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64 sudo install minikube-darwin-amd64 /usr/local/bin/minikube &amp;lt;!</description></item><item><title>Deploy hugo blog on github pages</title><link>/posts/2021/02/deploy-hugo-blog-on-github-pages/</link><pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate><guid>/posts/2021/02/deploy-hugo-blog-on-github-pages/</guid><description>What is Hugo? Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again.
In short, Hugo is a static website generation tool which transforms markdown into beautiful web pages. One can get started with hundreds of available themes or even create a new one.
Let&amp;rsquo;s jump right in.
First of all, we would need to install Hugo. In macOS, it can be installed through homebrew by running brew install hugo Once it is installed, we can create a blog by running hugo new site &amp;lt;BLOG_NAME&amp;gt; Now that the basic blog boilerplate is there, we can serve the blog locally going into blog directory created just now and run hugo server.</description></item><item><title>About Me</title><link>/about/</link><pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate><guid>/about/</guid><description>Hey. Akshit here. Yet Another Software Engineer(YASE) working in Golang. I love exploring new technologies. Currently exploring in rust-lang and solana blockchain. I enjoy reading fiction especially from J.R.R Tolkien, Dan Brown, and Amish Tripathi.
You can reach me on twitter or email me at akshitdhar@live.com</description></item><item><title>Welcome to my blog</title><link>/posts/2021/02/welcome-to-my-blog/</link><pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate><guid>/posts/2021/02/welcome-to-my-blog/</guid><description>Diving into blogging. Whatever exciting I come across, I will try to put it down here. Hopefully everyone will enjoy it.</description></item></channel></rss>